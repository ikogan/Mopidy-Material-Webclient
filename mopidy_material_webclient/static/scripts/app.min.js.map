{"version":3,"sources":["../src/app.js","../src/controllers.js","../src/directives.js","../src/services.js"],"names":["app","angular","module","config","$mdThemingProvider","theme","primaryPalette","accentPalette","$routeProvider","when","templateUrl","controller","otherwise","redirectTo","controllers","$scope","$mdSidenav","$mdDialog","$mdToast","$location","$timeout","$http","mopidy","lastfm","settings","showNowPlaying","volume","value","bypass","timer","get","then","m","playback","getCurrentTrack","done","track","$apply","nowPlaying","getInfo","getState","state","tracklist","getLength","length","getMute","mute","getVolume","setTimeout","on","console","log","bind","e","new_state","tl_track","data","$watch","oldValue","newValue","cancel","setVolume","setMute","errback","play","pause","artists","hasMetadata","getTrack","success","trackInfo","t","album","image","images","i","push","goTo","path","toggle","toggleSidenav","menuId","system","$event","DialogController","action","hide","closeDialog","show","targetEvent","template","response","post","simple","content","message","hideDelay","$routeParams","$window","$mdBottomSheet","$sce","type","uri","decodeURIComponent","loading","library","browse","uris","getImages","img","indexOf","lookup","info","tracks","artist","al","name","ar","getAlbum","albumInfo","getArtist","artistInfo","asTrusted","summary","trustAsHtml","ref","encodeURIComponent","locals","back","history","search","query","haveQueue","isPlaylist","playlists","playlist","readOnly","hasOwnProperty","_","includes","asList","getFontIcon","refreshPlaylists","refresh","replaceQueue","startPlayback","clear","addPlaylistToQueue","callback","add","addPlaylistToPlaylist","addToPlaylist","remove","index","splice","save","__model__","map","omitBy","property","startsWith","getTlTracks","getCurrentTlTrack","tltrack","playing","getRandom","enabled","randomOn","getRepeat","repeatOn","getConsume","consumeOn","tlid","previous","next","toggleRandom","setRandom","toggleRepeat","setRepeat","toggleConsume","setConsume","move","from","to","addQueueToPlaylist","albums","albumsLoading","artistsLoading","tracksLoading","any","results","j","k","l","favourites","create","newPlaylist","showTrackActions","child","$new","isFavourite","some","itm","scope","clickedItem","current","addToFavourites","removeFromFavourites","wifi","network","wifi_network","networks","ssid","JSON","parse","stringify","Date","now","extensions","forEach","key","checkForUpdates","latest","update","method","url","headers","Content-Type","addToQueue","playNext","playLast","playNow","result","directives","directive","$document","$rootScope","$compile","$interval","priority","restrict","compile","element","attr","attrs","scroll","event","y","bounds","top","scrollDown","scrollUp","container","scrollTop","bottom","$scrollUp","document","body","find","mopDragScrollBounds","mopDragScrollContainer","getBoundingClientRect","$on","off","services","factory","$q","Mopidy","resolve","reject","updatePageTitle","toLowerCase","position","filter","updatePlaylist","promise","pts","union","clickOutsideToClose","service","deferred","defer","subitm","join","title","heading","host"],"mappings":"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","file":"app.min.js","sourcesContent":["var app = angular.module('MopidyApp', ['ngRoute', 'ngMaterial', 'angular-sortable-view', 'mopControllers', 'mopServices', 'mopDirectives']);\n\napp.config(function($mdThemingProvider) {\n    $mdThemingProvider.theme('default')\n        .primaryPalette('deep-purple')\n        .accentPalette('pink');\n});\n\napp.config(['$routeProvider',\n    function ($routeProvider) {\n        $routeProvider.\n            when('/queue', {\n                templateUrl: 'partials/queue.html',\n                controller: 'QueueCtrl'\n            }).\n            when('/library', {\n                templateUrl: 'partials/library.html',\n                controller: 'LibraryCtrl'\n            }).\n            when('/library/:type/:uri', {\n                templateUrl: 'partials/library.html',\n                controller: 'LibraryCtrl'\n            }).\n            when('/playlists', {\n                templateUrl: 'partials/playlists.html',\n                controller: 'PlaylistsCtrl'\n            }).\n            when('/playlists/:uri', {\n                templateUrl: 'partials/playlists.html',\n                controller: 'PlaylistsCtrl'\n            }).\n            when('/search/:uri/:query', {\n                templateUrl: 'partials/search.html',\n                controller: 'SearchCtrl'\n            }).\n            when('/settings', {\n                templateUrl: 'partials/settings.html',\n                controller: 'SettingsCtrl'\n            }).\n            when('/about', {\n                templateUrl: 'partials/about.html',\n                controller: 'AboutCtrl'\n            })\n            .otherwise({\n                redirectTo: '/queue'\n            });\n  }]);\n","var controllers = angular.module('mopControllers', []);\n\ncontrollers.controller('AppCtrl', [\n    '$scope', '$mdSidenav', '$mdDialog', '$mdToast', '$location', '$timeout', '$http', 'mopidy', 'lastfm', 'settings',\n    function ($scope, $mdSidenav, $mdDialog, $mdToast, $location, $timeout, $http, mopidy, lastfm, settings) {\n        // Start now playing off as hidden. We'll show it once we have a queue\n        $scope.showNowPlaying = false;\n        $scope.volume = {\n            value: 0,\n            bypass: true,\n            timer: null\n        };\n\n        settings.get().then(function(settings) {\n            $scope.settings = settings['material-webclient'];\n        });\n\n        mopidy.then(function (m) {\n            m.playback.getCurrentTrack()\n                .done(function (track) {\n                    $scope.$apply(function () {\n                        $scope.nowPlaying = track;\n                        $scope.getInfo($scope.nowPlaying);\n                    });\n                });\n\n            m.playback.getState()\n                .done(function (state) {\n                    $scope.$apply(function () {\n                        $scope.state = state;\n                    });\n                });\n\n            m.tracklist.getLength().then(function(length) {\n                if(length > 0) {\n                    $scope.showNowPlaying = true;\n                }\n            });\n\n            m.playback.getMute().then(function(mute) {\n                if(mute) {\n                    $scope.volume.value = 0;\n                } else {\n                    m.playback.getVolume().then(function(volume) {\n                        $scope.volume.value = volume;\n\n                        setTimeout(function() {\n                            $scope.volume.bypass = false;\n                        });\n                    });\n                }\n            });\n\n            m.on(console.log.bind(console));\n\n            m.on('event:tracklistChanged', function(e) {\n                m.tracklist.getLength().then(function(length) {\n                    $scope.showNowPlaying = (length > 0);\n                })\n            });\n\n            m.on('event:playbackStateChanged', function (e) {\n                $scope.$apply(function () {\n                    $scope.state = e.new_state;\n                });\n            });\n\n            m.on('event:trackPlaybackStarted', function (e) {\n                $scope.$apply(function () {\n                    $scope.nowPlaying = e.tl_track.track;\n                    $scope.getInfo($scope.nowPlaying);\n                });\n            });\n\n            m.on('event:volumeChanged', function(e) {\n                $scope.$apply(function() {\n                    $scope.volume.bypass = true;\n                    $scope.volume.value = e.volume;\n\n                    setTimeout(function() {\n                        $scope.volume.bypass = false;\n                    }, 0);\n                })\n            });\n\n            m.on('event:muteChanged', function(e) {\n                $scope.$apply(function() {\n                    $scope.volume.bypass = true;\n                    if(e.mute) {\n                        $scope.volume.value = 0;\n                    } else {\n                        m.playback.getVolume().then(function(data) {\n                            $scope.volume.value = data.volume;\n\n                            setTimeout(function() {\n                                $scope.volume.bypass = false;\n                            }, 0);\n                        });\n                    }\n                });\n            });\n\n            $scope.$watch('volume.value', function(oldValue, newValue) {\n                if(newValue && !$scope.volume.bypass) {\n                    $timeout.cancel($scope.volume.timer);\n                    $scope.volume.timer = $timeout(function() {\n                        m.playback.setVolume(newValue);\n                        m.playback.setMute(false);\n                    }, 100);\n                }\n            });\n\n            m.errback = function (e) {\n                console.log(e);\n            };\n\n            $scope.play = function () {\n                m.playback.play();\n            };\n\n            $scope.pause = function () {\n                m.playback.pause();\n            };\n        });\n\n        $scope.getInfo = function (track) {\n            if (!track || !track.artists || track.artists.length === 0) {\n                return;\n            }\n\n            $scope.nowPlaying.hasMetadata = true;\n\n            lastfm.getTrack(track).success(function (trackInfo) {\n                var t = trackInfo.track;\n                if (!t) {\n                    return;\n                }\n\n                if (t.album &&\n                    t.album.image &&\n                    t.album.image.length > 0) {\n                    $scope.nowPlaying.album = t.album;\n                    $scope.nowPlaying.album.images = [];\n                    for (var i = 0; i < t.album.image.length; i++) {\n                        $scope.nowPlaying.album.images.push(t.album.image[i]['#text']);\n                    }\n                }\n            });\n        };\n\n        $scope.goTo = function (path) {\n            $location.path(path);\n            $mdSidenav('left').toggle();\n        };\n\n        $scope.toggleSidenav = function (menuId) {\n            $mdSidenav(menuId).toggle();\n        };\n\n        $scope.system = function ($event) {\n\n            function DialogController($scope, $mdDialog) {\n                $scope.action = function (value) {\n                    $mdDialog.hide(value);\n                };\n                $scope.closeDialog = function () {\n                    $mdDialog.cancel();\n                };\n            }\n\n            $mdDialog.show({\n                targetEvent: $event,\n                template:\n                    '<md-dialog aria-label=\"List dialog\">' +\n                        '  <md-dialog-content>' +\n                        '    <md-list>' +\n                        '      <md-list-item ng-click=\"action(\\'restart\\')\">' +\n                        '        <md-icon class=\"md-accent\">refresh</md-icon><p>Restart</p>' +\n                        '      </md-list-item>' +\n                        '      <md-list-item ng-click=\"action(\\'about\\')\">' +\n                        '        <md-icon class=\"md-accent\">info</md-icon><p>About</p>' +\n                        '      </md-list-item>' +\n                        '      <md-list-item ng-click=\"closeDialog()\">' +\n                        '        <md-icon>cancel</md-icon><p>Cancel</p>' +\n                        '      </md-list-item>' +\n                        '    </md-list>' +\n                        '  </md-dialog-content>' +\n                        '</md-dialog>',\n                controller: DialogController\n            }).then(function (response) {\n                if (response == 'about') {\n                    $location.path('about');\n                } else if (response == 'restart') {\n                    $http.post('/material-webclient/restart').success(function (response) {\n                        $mdToast.show(\n                            $mdToast.simple()\n                            .content(response.message)\n                            .hideDelay(3000)\n                        );\n                    });\n                }\n                console.log(response);\n            });\n        };\n    }\n]);\n\ncontrollers.controller('LibraryCtrl', [\n    '$scope', '$routeParams', '$location', '$window', '$mdBottomSheet', '$sce', 'mopidy', 'lastfm',\n    function ($scope, $routeParams, $location, $window, $mdBottomSheet, $sce, mopidy, lastfm) {\n        var type = null;\n        var uri = null;\n\n        if ($routeParams.type) {\n            type = decodeURIComponent($routeParams.type);\n        }\n        if ($routeParams.uri) {\n            uri = decodeURIComponent($routeParams.uri);\n            $scope.uri = uri;\n        }\n\n        $scope.loading = true;\n\n        mopidy.then(function (m) {\n            $scope.mopidy = m;\n            m.library.browse(uri).done(\n                function (content) {\n                    var uris = [];\n\n                    $scope.$apply(function () {\n                        $scope.content = content;\n                        $scope.loading = false;\n                    });\n\n                    for (var i = 0; i < content.length; i++) {\n                        if (content[i].type == 'track') {\n                            uris.push(content[i].uri);\n                        }\n                    }\n\n                    if (type) {\n                        m.library.getImages(uris).done(function (images) {\n                            $scope.$apply(function () {\n                                for (var i = 0; i < $scope.content.length; i++) {\n                                    var img = images[$scope.content[i].uri];\n                                    if (img && img.length > 0) {\n                                        $scope.content[i].image = img[0].uri;\n                                    }\n                                }\n                            });\n                        });\n                    }\n                });\n\n            if (type &&\n                type != 'directory' &&\n                uri.indexOf('podcast') !== 0) {\n                m.library.lookup(uri).done(function (info) {\n                    $scope.tracks = info;\n                    var album;\n                    var artist;\n                    if (info.length > 0) {\n                        album = info[0].album;\n                        artist = info[0].artists && info[0].artists.length > 0 ? info[0].artists[0] : null;\n                    }\n\n                    for (var i = 1; i < info.length; i++) {\n                        var al = info[i].album;\n                        if (album && al && al.name != album.name) {\n                            album = null;\n                        }\n                        var ar = info[i].artists && info[i].artists.length > 0 ? info[i].artists[0] : null;\n                        if (artist && ar && ar.name != artist.name) {\n                            artist = null;\n                        }\n                    }\n\n                    if (type == 'album' && album) {\n                        lastfm.getAlbum(album).success(function (albumInfo) {\n                            $scope.albumInfo = albumInfo.album;\n                        });\n                    }\n\n                    if (type == 'artist' && artist) {\n                        lastfm.getArtist(artist).success(function (artistInfo) {\n                            $scope.artistInfo = artistInfo.artist;\n                        });\n                    }\n                });\n            }\n        });\n\n        $scope.asTrusted = function (summary) {\n            return $sce.trustAsHtml(summary);\n        };\n\n        $scope.goTo = function (ref) {\n            if (ref.type != 'track') {\n                $location.path('library/' + ref.type + '/' + encodeURIComponent(ref.uri));\n            } else {\n                $mdBottomSheet.show({\n                    templateUrl: 'partials/track-actions.html',\n                    controller: 'TrackActionsCtrl',\n                    locals: {\n                        'track': ref\n                    }\n                });\n            }\n        };\n\n        $scope.back = function () {\n            $window.history.back();\n        };\n\n        $scope.search = function (uri, query) {\n            $location.path('search/' + encodeURIComponent(uri) + '/' + encodeURIComponent(query));\n        };\n\n\n    }\n]);\n\ncontrollers.controller('PlaylistsCtrl', [\n    '$scope', '$routeParams', '$location', '$mdBottomSheet', 'mopidy',\n    function ($scope, $routeParams, $location, $mdBottomSheet, mopidy) {\n        var uri = $routeParams.uri;\n\n        mopidy.then(function (m) {\n            $scope.mopidy = m;\n\n            m.tracklist.getLength().then(function(length) {\n                $scope.haveQueue = length > 0;\n            });\n\n            if (uri) {\n                $scope.isPlaylist = true;\n\n                m.playlists.lookup(uri).done(\n                    function (playlist) {\n                        $scope.$apply(function () {\n                            $scope.playlist = playlist;\n                            $scope.readOnly = playlist.uri.indexOf('m3u:') !== 0;\n                            $scope.content = playlist.tracks;\n\n                            var uris = [];\n                            for (var i = 0; i < $scope.content.length && i < 9; i++) {\n                                uris.push($scope.content[i].uri);\n                            }\n\n                            m.library.getImages(uris).done(function (images) {\n                                $scope.$apply(function () {\n                                    $scope.images = [];\n                                    for(var i in images) {\n                                        if(images.hasOwnProperty(i) && images[i].length > 0 &&\n                                            !_.includes($scope.images, images[i][0].uri)) {\n                                                $scope.images.push(images[i][0].uri);\n                                        }\n                                    }\n                                });\n                            });\n                        });\n                    });\n            } else {\n                m.playlists.asList().done(\n                    function (content) {\n                        $scope.$apply(function () {\n                            $scope.content = content;\n                        });\n                    });\n            }\n        });\n\n        $scope.getFontIcon = function (ref) {\n            if (ref.uri.indexOf('spotify') === 0) {\n                return 'fa-spotify';\n            } else if (ref.uri.indexOf('tunein:') === 0) {\n                return 'fa-headphones';\n            } else if (ref.uri.indexOf('podcast') === 0) {\n                return 'fa-rss';\n            } else if (ref.uri.indexOf('soundcloud') === 0) {\n                return 'fa-soundcloud';\n            } else if (ref.uri.indexOf('gmusic') === 0) {\n                return 'fa-google';\n            } else if ($scope.isPlaylist) {\n                return 'fa-music';\n            } else {\n                return 'fa-folder-o';\n            }\n        };\n\n        $scope.refreshPlaylists = function() {\n            $scope.content = null;\n\n            $scope.mopidy.playlists.refresh().then(function() {\n                $scope.mopidy.playlists.asList().then(function(content) {\n                    $scope.$apply(function() {\n                        $scope.content = content;\n                    });\n                });\n            });\n        };\n\n        $scope.goTo = function(ref) {\n            if ($scope.isPlaylist) {\n                $mdBottomSheet.show({\n                    templateUrl: 'partials/track-actions.html',\n                    controller: 'TrackActionsCtrl',\n                    locals: {\n                        'track': ref\n                    }\n                });\n            } else {\n                $location.path('playlists/' + ref.uri);\n            }\n        };\n\n        $scope.replaceQueue = function(startPlayback) {\n            $scope.mopidy.tracklist.clear().done(function () {\n                $scope.addPlaylistToQueue(function() {\n                    if(startPlayback) {\n                        $scope.mopidy.playback.play();\n                    }\n                });\n            });\n        };\n\n        $scope.addPlaylistToQueue = function(callback) {\n            var uris = [];\n            for (var i = 0; i < $scope.content.length; i++) {\n                uris.push($scope.content[i].uri);\n            }\n\n            $scope.mopidy.tracklist.add(null, null, null, uris).done(function () {\n                if(callback) {\n                    callback();\n                }\n            });\n        };\n\n        $scope.addPlaylistToPlaylist = function() {\n            return $scope.mopidy.addToPlaylist($scope.content);\n        };\n\n        $scope.remove = function(index) {\n            $scope.playlist.tracks.splice(index, 1)\n            $scope.save();\n        };\n\n        $scope.save = function() {\n            $scope.mopidy.playlists.save({\n                '__model__': $scope.playlist['__model__'],\n                name: $scope.playlist.name,\n                uri: $scope.playlist.uri,\n                tracks: _.map($scope.playlist.tracks, function(track) {\n                    return _.omitBy(track, function(value, property) {\n                        return property.startsWith('$');\n                    });\n                })\n            });\n\n            return true;\n        };\n    }\n]);\n\ncontrollers.controller('QueueCtrl', [\n    '$scope', '$mdDialog', '$mdToast', 'mopidy', 'lastfm',\n    function ($scope, $mdDialog, $mdToast, mopidy, lastfm) {\n        mopidy.then(function (m) {\n\n            $scope.mopidy = m;\n            m.tracklist.getTlTracks().then(function (tracks) {\n                $scope.$apply(function () {\n                    $scope.tracks = tracks;\n                });\n\n                m.playback.getCurrentTlTrack()\n                    .done(function (tltrack) {\n                        $scope.$apply(function () {\n                            $scope.playing = tltrack;\n                            $scope.loading = false;\n                            if (tltrack) {\n                                $scope.getInfo(tltrack.track);\n                            }\n                        });\n                    });\n            });\n\n            m.tracklist.getRandom().done(function (enabled) {\n                $scope.$apply(function () {\n                    $scope.randomOn = enabled;\n                });\n            });\n\n            m.tracklist.getRepeat().done(function (enabled) {\n                $scope.$apply(function () {\n                    $scope.repeatOn = enabled;\n                });\n            });\n\n            m.tracklist.getConsume().done(function (enabled) {\n                $scope.$apply(function () {\n                    $scope.consumeOn = enabled;\n                });\n            });\n\n            m.on('event:tracklistChanged', function () {\n                m.tracklist.getTlTracks().then(function (tracks) {\n                    if(tracks.length !== tracks) {\n                        $scope.$apply(function () {\n                            $scope.tracks = tracks;\n                        });\n                    }\n                });\n            });\n\n            m.playback.getState()\n                .done(function (state) {\n                    $scope.$apply(function () {\n                        $scope.state = state;\n                    });\n                });\n\n            m.on('event:playbackStateChanged', function (e) {\n                $scope.$apply(function () {\n                    $scope.state = e.new_state;\n                });\n            });\n\n            m.on('event:trackPlaybackStarted', function (e) {\n                $scope.$apply(function () {\n                    $scope.playing = e.tl_track;\n                    $scope.getInfo($scope.nowPlaying);\n                });\n            });\n        });\n\n        $scope.getInfo = function (track) {\n            if (!track || track.artists.length === 0) {\n                return;\n            }\n            lastfm.getTrack(track).success(function (trackInfo) {\n                var t = trackInfo.track;\n                if (!t) {\n                    return;\n                }\n\n                if (t.album &&\n                    t.album.image &&\n                    t.album.image.length > 0) {\n                    $scope.playing.track.album = t.album;\n                    $scope.playing.track.album.images = [];\n                    for (var i = 0; i < t.album.image.length; i++) {\n                        $scope.playing.track.album.images.push(t.album.image[i]['#text']);\n                    }\n                }\n            });\n        };\n\n        $scope.play = function (track) {\n            if ($scope.state == 'playing' && track.tlid == $scope.playing.tlid) {\n                $scope.mopidy.playback.pause();\n            } else {\n                $scope.mopidy.playback.play(track);\n            }\n        };\n\n        $scope.previous = function () {\n            $scope.mopidy.playback.previous();\n        };\n\n        $scope.next = function () {\n            $scope.mopidy.playback.next();\n        };\n\n        $scope.toggleRandom = function () {\n            $scope.mopidy.tracklist.setRandom(!$scope.randomOn).done(\n                function () {\n                    $scope.$apply(function () {\n                        $scope.randomOn = !$scope.randomOn;\n                    });\n                });\n        };\n\n        $scope.toggleRepeat = function () {\n            $scope.mopidy.tracklist.setRepeat(!$scope.repeatOn).done(\n                function () {\n                    $scope.$apply(function () {\n                        $scope.repeatOn = !$scope.repeatOn;\n                    });\n                });\n        };\n\n        $scope.toggleConsume = function () {\n            $scope.mopidy.tracklist.setConsume(!$scope.consumeOn).done(\n                function () {\n                    $scope.$apply(function () {\n                        $scope.consumeOn = !$scope.consumeOn;\n                    });\n                });\n        };\n\n        $scope.move = function(track, from, to) {\n            $scope.mopidy.tracklist.move(from, from, to);\n\n            return true;\n        };\n\n        $scope.remove = function (track, index) {\n            $scope.tracks.splice(index, 1);\n            $scope.mopidy.tracklist.remove({ tlid: [track.tlid] });\n        };\n\n        $scope.clear = function () {\n            $scope.mopidy.tracklist.clear();\n        };\n\n        $scope.addQueueToPlaylist = function () {\n            $scope.mopidy.addToPlaylist(_.map($scope.tracks, function(track) {\n                return track.track;\n            }));\n        };\n    }\n]);\n\ncontrollers.controller('SearchCtrl', [\n    '$scope', '$routeParams', '$mdBottomSheet', '$location', 'mopidy',\n    function ($scope, $routeParams, $mdBottomSheet, $location, mopidy) {\n\n        $scope.albums = [];\n        $scope.albumsLoading = true;\n        $scope.artists = [];\n        $scope.artistsLoading = true;\n        $scope.tracks = [];\n        $scope.tracksLoading = true;\n\n        var uri = decodeURIComponent($routeParams.uri);\n        var query = decodeURIComponent($routeParams.query);\n\n        mopidy.then(function (m) {\n            $scope.mopidy = m;\n            m.library.search({ 'any': query }, [uri]).then(function (results) {\n                $scope.$apply(function () {\n                    for (var i = 0; i < results.length; i++) {\n                        var library = results[i];\n\n                        $scope.albumsLoading = false;\n                        if (library.albums) {\n                            for (var j = 0; j < library.albums.length; j++) {\n                                $scope.albums.push(library.albums[j]);\n                            }\n                        }\n\n                        $scope.artistsLoading = false;\n                        if (library.artists) {\n                            for (var k = 0; k < library.artists.length; k++) {\n                                $scope.artists.push(library.artists[k]);\n                            }\n                        }\n\n                        $scope.tracksLoading = false;\n                        if (library.tracks) {\n                            for (var l = 0; l < library.tracks.length; l++) {\n                                $scope.tracks.push(library.tracks[l]);\n                            }\n                        }\n                    }\n                });\n\n                console.log(results);\n            });\n\n            m.playlists.lookup('m3u:Favourites.m3u').done(function (playlist) {\n                if (!playlist) {\n                    m.playlists.create('Favourites', 'm3u').done(function (newPlaylist) {\n                        $scope.favourites = newPlaylist;\n                    });\n                } else {\n                    $scope.favourites = playlist;\n                }\n            });\n        });\n\n        $scope.goto = function (type, uri) {\n            $location.path('library/' + type + '/' + encodeURIComponent(uri));\n        };\n\n        $scope.play = function (track) {\n            $scope.mopidy.play(track.uri);\n        };\n\n        $scope.showTrackActions = function ($event, track) {\n\n            var child = $scope.$new();\n\n            if ($scope.favourites.tracks) {\n                child.isFavourite = $scope.favourites.tracks.some(function (itm) {\n                    return itm.uri == track.uri;\n                });\n            }\n\n            $mdBottomSheet.show({\n                templateUrl: 'partials/track-actions.html',\n                controller: 'TrackActionsCtrl',\n                targetEvent: $event,\n                scope: child\n            }).then(function (clickedItem) {\n                if (clickedItem == 'play-next') {\n                    $scope.mopidy.playback.getCurrentTlTrack().done(function (current) {\n                        console.log(current);\n                        $scope.mopidy.tracklist.index(current).done(function (index) {\n                            $scope.mopidy.tracklist.add(null, index + 1, null, [track.uri]);\n                        });\n                    });\n                } else if (clickedItem == 'add-to-queue') {\n                    $scope.mopidy.tracklist.add(null, null, null, [track.uri]);\n                } else if (clickedItem == 'add-to-favourites') {\n                    $scope.addToFavourites(track.uri);\n                } else if (clickedItem == 'remove-from-favourites') {\n                    $scope.removeFromFavourites(track.uri);\n                }\n            });\n        };\n\n        $scope.addToFavourites = function (uri) {\n            $scope.mopidy.library.lookup(uri).done(function (tracks) {\n                if (!$scope.favourites.tracks) {\n                    $scope.favourites.tracks = tracks;\n                } else {\n                    $scope.favourites.tracks.push(tracks[0]);\n                }\n                $scope.mopidy.playlists.save($scope.favourites).done(function (playlist) {\n                    $scope.favourites = playlist;\n                });\n            });\n        };\n\n        $scope.removeFromFavourites = function (uri) {\n            for (var i = 0; i < $scope.favourites.tracks.length; i++) {\n                if ($scope.favourites.tracks[i].uri == uri) {\n                    $scope.favourites.tracks.splice(i, 1);\n                }\n            }\n            $scope.mopidy.playlists.save($scope.favourites).done(function (playlist) {\n                $scope.favourites = playlist;\n            });\n        };\n    }\n]);\n\ncontrollers.controller('SettingsCtrl', [\n    '$scope', '$http', '$mdToast', 'settings',\n    function ($scope, $http, $mdToast, settings) {\n        settings.get().then(function (settings) {\n            $scope.wifi = $scope.wifi ? $scope.wifi : [];\n            $scope.settings = settings;\n            if ($scope.wifi.indexOf(settings.network.wifi_network) < 0) {\n                $scope.wifi.push(settings.network.wifi_network);\n            }\n        });\n\n        $http.get('/material-webclient/wifi').success(function (networks) {\n            $scope.wifi = $scope.wifi ? $scope.wifi : [];\n            for (var i = 0; i < networks.length; i++) {\n                if ($scope.wifi.indexOf(networks[i].ssid) < 0) {\n                    $scope.wifi.push(networks[i].ssid);\n                }\n            }\n        });\n\n        $scope.save = function () {\n            var data = JSON.parse(JSON.stringify($scope.settings));\n            settings.save(data).then(function() {\n                $mdToast.show(\n                    $mdToast.simple()\n                        .content(response.message)\n                        .hideDelay(3000)\n                );\n            });\n        };\n    }\n]);\n\ncontrollers.controller('AboutCtrl', [\n    '$scope', '$http', '$mdToast',\n    function ($scope, $http, $mdToast) {\n        $scope.loading = true;\n\n        $scope.refresh = function () {\n            $http.get('/material-webclient/extensions?' + Date.now()).success(function (response) {\n                $scope.loading = false;\n                var extensions = {};\n                angular.forEach(response, function (value, key) {\n                    if (key.indexOf('Mopidy') >= 0) {\n                        extensions[key] = { current: value };\n                    }\n                });\n                $scope.extensions = extensions;\n            });\n        };\n\n        $scope.refresh();\n\n        $scope.checkForUpdates = function () {\n            $scope.loading = true;\n            $http.get('/material-webclient/extensions?outdated=true&' + Date.now()).success(function (response) {\n                var message = 'No updates found';\n                for (var itm in response) {\n                    if ($scope.extensions[itm]) {\n                        $scope.extensions[itm].latest = response[itm].latest;\n                        message = 'Updates found for installed modules';\n                    }\n                }\n                $scope.loading = false;\n                $mdToast.show(\n                    $mdToast.simple()\n                        .content(message)\n                        .hideDelay(3000)\n                );\n            });\n        };\n\n        $scope.update = function (name) {\n            $http({\n                method: 'POST',\n                url: '/material-webclient/extensions',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                data: 'extension=' + name\n            }).success(function (response) {\n                $mdToast.show(\n                    $mdToast.simple()\n                        .content(response.message)\n                        .hideDelay(3000)\n                );\n            });\n        };\n    }]);\n\ncontrollers.controller('TrackActionsCtrl', ['$scope', '$mdBottomSheet', 'mopidy', 'track',\n    function ($scope, $mdBottomSheet, mopidy, track) {\n\n    mopidy.then(function(m) {\n        $scope.addToQueue = function(track) {\n            return m.tracklist.index().then(function(index) {\n                index = (index === null ? 0 : index+1);\n                return { 'index': index, 'track': m.tracklist.add(null, index, null, [track.uri]) };\n            });\n        };\n\n        $scope.playNext = function() {\n            $mdBottomSheet.hide($scope.addToQueue(track));\n        };\n\n        $scope.playLast = function() {\n            $mdBottomSheet.hide(m.tracklist.add(null, null, null, [track.uri]));\n        };\n\n        $scope.playNow = function() {\n            $mdBottomSheet.hide($scope.addToQueue(track).then(function(result) {\n                if(result.index) {\n                    return m.playback.next();\n                } else{\n                    return m.playback.play();\n                }\n            }));\n        };\n\n        $scope.addToPlaylist = function() {\n            $mdBottomSheet.hide(m.addToPlaylist([{\n                '__model__': 'Track',\n                name: track.name,\n                uri: track.uri\n            }]));\n        };\n    });\n}]);\n","var directives = angular.module('mopDirectives', []);\n\ndirectives.directive('mopDragScroll', ['$document', '$rootScope', '$compile', '$interval',\n    function($document, $rootScope, $compile, $interval) {\n        return {\n            priority: 1001,\n            restrict: 'A',\n            compile: function(element) {\n                element.attr('sv-on-start', \"$emit('mopDraggingStart')\");\n                element.attr('sv-on-stop', \"$emit('mopDraggingStop')\");\n\n                return {\n                    post: function(scope, element, attrs) {\n                        var bounds = angular.element(document.body).find(attrs.mopDragScrollBounds);\n                        var container = angular.element(document.body).find(attrs.mopDragScrollContainer);\n                        var scrollUp, scrollDown = null;\n\n                        if(!bounds || bounds.length !== 1) {\n                            throw 'Cannot find bounding box specified as ' + attrs.mopDragScrollBounds;\n                        }\n\n                        if(!container || container.length !== 1) {\n                            throw 'Cannot find container to scroll, specified as ' + attrs.mopDragScrollContainer;\n                        }\n\n                        container = container[0];\n                        bounds = bounds[0].getBoundingClientRect();\n\n                        function scroll(event) {\n                            if(event && event.y < bounds.top) {\n                                if(scrollDown) {\n                                    $interval.cancel(scrollDown);\n                                    scrollDown = null;\n                                }\n\n                                if(!scrollUp) {\n                                    scrollUp = $interval(function() {\n                                        container.scrollTop -= 10;\n                                    }, 50);\n                                }\n                            } else if(event && event.y > bounds.bottom) {\n                                if(scrollUp) {\n                                    $interval.cancel($scrollUp);\n                                    scrollUp = null;\n                                }\n\n                                if(!scrollDown) {\n                                    scrollDown = $interval(function() {\n                                        container.scrollTop += 10;\n                                    }, 50);\n                                }\n                            } else {\n                                if(scrollUp) {\n                                    $interval.cancel(scrollUp);\n                                }\n\n                                if(scrollDown) {\n                                    $interval.cancel(scrollDown);\n                                }\n\n                                scrollUp = scrollDown = null;\n                            }\n                        }\n\n                        $rootScope.$on('mopDraggingStart', function() {\n                            $document.on('mousemove', scroll);\n                        })\n\n                        $rootScope.$on('mopDraggingEnd', function() {\n                            $document.off('mousemove', scroll);\n                            scroll();\n                        });\n                    }\n                }\n            }\n        }\n}]);\n","var services = angular.module('mopServices', []);\n\nservices.factory('mopidy', ['$q', '$rootScope', '$location', '$mdDialog', 'settings',\n    function ($q, $rootScope, $location, $mdDialog, settings) {\n        var mopidy = new Mopidy();\n        return $q(function (resolve, reject) {\n            mopidy.on(\"state:online\", function () {\n                mopidy.playback.getCurrentTlTrack()\n                    .done(function (tltrack) {\n                        if(tltrack) {\n                            mopidy.nowPlaying = tltrack.track;\n                        }\n\n                        settings.updatePageTitle(tltrack ? 'playing' : 'stopped', mopidy.nowPlaying);\n                    });\n\n                mopidy.on('event:trackPlaybackStarted', function (e) {\n                    mopidy.nowPlaying = e.tl_track.track;\n                    settings.updatePageTitle('playing', mopidy.nowPlaying);\n                });\n\n                mopidy.on('event:playbackStateChanged', function (e) {\n                    settings.updatePageTitle(e.new_state, mopidy.nowPlaying);\n                });\n\n                mopidy.getFontIcon = function (ref) {\n                    if (ref.type && ref.type.toLowerCase() == 'track') {\n                        return 'fa-music';\n                    } else {\n                        if (ref.uri.indexOf('spotify') === 0) {\n                            return 'fa-spotify';\n                        } else if (ref.uri.indexOf('tunein:') === 0) {\n                            return 'fa-headphones';\n                        } else if (ref.uri.indexOf('podcast:') === 0) {\n                            return 'fa-rss';\n                        } else if (ref.uri.indexOf('soundcloud:') === 0) {\n                            return 'fa-soundcloud';\n                        } else if (ref.uri.indexOf('gmusic:') === 0) {\n                            return 'fa-google';\n                        } else if (ref.uri.indexOf('file:') === 0) {\n                            return 'fa-music';\n                        } else {\n                            return 'fa-folder-o';\n                        }\n                    }\n                };\n\n                mopidy.play = function (uri) {\n                    mopidy.tracklist.index(mopidy.nowPlaying).then(function (position) {\n                        mopidy.tracklist.add(null, position + 1, null, [uri]).then(function (tracks) {\n                            mopidy.playback.play(tracks[0]);\n                        });\n                    });\n                };\n\n                mopidy.addToPlaylist = function(tracks) {\n                    return $mdDialog.show({\n                        controller: ['$scope', '$mdDialog', '$mdToast', function($scope, $mdDialog, $mdToast) {\n                            $scope.newPlaylist = false;\n\n                            mopidy.playlists.asList().then(function(playlists) {\n                                $scope.playlists = _.filter(playlists, function(playlist) {\n                                    return playlist.uri.startsWith('m3u:');\n                                });\n                            });\n\n                            $scope.cancel = function() {\n                                $mdDialog.cancel();\n                            };\n\n                            $scope.add = function() {\n                                var playlist = $scope.playlists[$scope.playlist];\n                                var message;\n                                var promise;\n\n                                function updatePlaylist(playlist) {\n                                    playlist = {\n                                        '__model__': 'Playlist',\n                                        name: playlist.name,\n                                        uri: playlist.uri,\n                                        tracks: _.map(tracks, function(track) {\n                                            return _.omitBy(track, function(value, property) {\n                                                return property.startsWith('$');\n                                            })\n                                        })\n                                    };\n\n                                    return mopidy.playlists.save(playlist).then(function() {\n                                        $mdToast.show(\n                                            $mdToast.simple()\n                                            .content(message)\n                                            .position('bottom')\n                                            .hideDelay(1500)\n                                        );\n                                    });\n                                }\n\n                                if($scope.playlist === -1) {\n                                    message = 'New playlist ' + $scope.name + ' created';\n                                    promise = mopidy.playlists.create($scope.name).then(function(playlist){\n                                        return updatePlaylist(playlist);\n                                    });\n                                } else {\n                                    message = 'Playlist ' + playlist.name + ' updated';\n                                    promise = mopidy.playlists.lookup(playlist.uri).then(function(pts) {\n                                        tracks = _.union(pts.tracks, tracks);\n                                        updatePlaylist(playlist);\n                                    });\n                                }\n\n                                promise.then(function() {\n                                    $mdDialog.hide();\n                                });\n                            };\n                        }],\n                        templateUrl: 'partials/add-to-playlist-dialog.html',\n                        clickOutsideToClose: true\n                    });\n                };\n\n                resolve(mopidy);\n            });\n        });\n    }\n]);\n\nservices.factory('lastfm', [\n    '$q', '$http',\n    function ($q, $http) {\n        var key = '2b640713cdc23381c5fb5fc3ef65b576';\n        var lastfm = {\n            getAlbum: function (album) {\n                return $http.get(\"https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=\" + key +\n                    \"&artist=\" + encodeURIComponent(album.artists[0].name) +\n                    \"&album=\" + encodeURIComponent(album.name) +\n                    \"&format=json\");\n            },\n            getArtist: function (artist) {\n                return $http.get(\"https://ws.audioscrobbler.com/2.0/?method=artist.getinfo&api_key=\" + key +\n                    \"&artist=\" + encodeURIComponent(artist.name) +\n                    \"&format=json\");\n            },\n            getTrack: function (track) {\n                return $http.get(\"https://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=\" + key +\n                    \"&artist=\" + encodeURIComponent(track.artists[0].name) +\n                    \"&track=\" + encodeURIComponent(track.name) +\n                    \"&format=json\");\n            }\n        };\n\n        return lastfm;\n    }\n]);\n\nservices.factory('settings', [\n    '$q', '$http', '$rootScope',\n    function($q, $http, $rootScope) {\n        var settings = null;\n        var promise = null;\n\n        var service = {\n            get: function() {\n                var deferred = $q.defer();\n\n                if(settings) {\n                    deferred.resolve(settings);\n                }\n\n                if(promise) {\n                    return promise;\n                }\n\n                $http.get('/material-webclient/settings').success(function (settings) {\n                    for (var itm in settings) {\n                        if (settings.hasOwnProperty(itm)) {\n                            var subitm = settings[itm];\n                            for (var key in subitm) {\n                                if (subitm.hasOwnProperty(key)) {\n                                    if (subitm[key] === 'true') {\n                                        subitm[key] = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    deferred.resolve(settings);\n                });\n\n                promise = deferred.promise;\n                return promise;\n            },\n\n            save: function(data) {\n                var deferred = $q.defer();\n\n                for (var itm in data) {\n                    if (data.hasOwnProperty(itm)) {\n                        var subitm = data[itm];\n                        for (var key in subitm) {\n                            if (subitm.hasOwnProperty(key)) {\n                                if (typeof subitm[key] === 'boolean') {\n                                    subitm[key] = 'true';\n                                }\n                            }\n                        }\n                    }\n                }\n\n                $http.post('/material-webclient/settings', data)\n                    .success(function (response) {\n                        settings = data;\n\n                        $q.resolve();\n                    });\n\n                return deferred.promise;\n            },\n\n            updatePageTitle: function(state, track) {\n                if (track && typeof track.artists != 'undefined') {\n                    var artists = track.artists.map(\n                        function(artist){\n                            return artist.name;\n                        }).join(\", \");\n                }\n\n                if(track) {\n                    var title = null;\n                    if (state == 'playing') {\n                        title = '\\u25B6 ' + track.name + ' - ' + artists + ' | Mopidy';\n                    } else if (state == 'paused') {\n                        title = '\\u2759\\u2759 ' + track.name + ' - ' + artists + ' | Mopidy';\n                    }\n                }\n\n                service.get().then(function(settings) {\n                    if(settings['material-webclient'].title) {\n                        $rootScope.title = title ? title : settings['material-webclient'].title;\n                        $rootScope.heading = settings['material-webclient'].title;\n                    } else {\n                        $rootScope.title = $location.host;\n                        $rootScope.heading = $location.host;\n                    }\n                });\n            }\n        }\n\n        return service;\n    }\n]);\n"]}